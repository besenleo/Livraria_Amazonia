/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.ControleAutor;
import control.ControleEditora;
import control.ControleLivro;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import model.Autor;
import model.Editora;
import model.Livro;
import java.util.Set;
import java.util.HashSet;
import javax.swing.DefaultComboBoxModel;


public class AdicionarLivro extends javax.swing.JFrame {
    
    ControleAutor controleAutor;
    ControleEditora controleEditora;
    ControleLivro controleLivro;
    Set<Autor> autores;
    Editora editora;
    
    /**
     * Creates new form AdicionarLivro
     */
    public AdicionarLivro() {
        controleAutor = new ControleAutor();
        controleEditora = new ControleEditora();
        controleLivro = new ControleLivro();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLblTituloPagina = new javax.swing.JLabel();
        jLblTitulo = new javax.swing.JLabel();
        jTxtTitulo = new javax.swing.JTextField();
        jLblPreco = new javax.swing.JLabel();
        jTxtPreco = new javax.swing.JTextField();
        jLblAutorID = new javax.swing.JLabel();
        jBtnAdicionar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListAutores = new javax.swing.JList<>();
        jLblEditora = new javax.swing.JLabel();
        jLblCodigo = new javax.swing.JLabel();
        jTxtCodigo = new javax.swing.JTextField();
        jCbxEditora = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLblTituloPagina.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLblTituloPagina.setText("Adicionar Livro");

        jLblTitulo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLblTitulo.setText("Titulo:");

        jTxtTitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtTituloActionPerformed(evt);
            }
        });

        jLblPreco.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLblPreco.setText("Preço:");

        jLblAutorID.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLblAutorID.setText("Selecione o(s) Autor(es):");

        jBtnAdicionar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jBtnAdicionar.setText("Adicionar Livro");
        jBtnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAdicionarActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jListAutores);

        jLblEditora.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLblEditora.setText("Selecione a Editora:");

        jLblCodigo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLblCodigo.setText("Código de Barras:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLblTituloPagina)
                .addGap(271, 271, 271))
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLblCodigo)
                    .addComponent(jLblTitulo)
                    .addComponent(jLblPreco)
                    .addComponent(jLblAutorID)
                    .addComponent(jLblEditora))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTxtTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE)
                    .addComponent(jTxtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1)
                    .addComponent(jTxtCodigo)
                    .addComponent(jCbxEditora, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(129, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLblTituloPagina)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblCodigo)
                    .addComponent(jTxtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblTitulo)
                    .addComponent(jTxtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblPreco)
                    .addComponent(jTxtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLblAutorID)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblEditora)
                    .addComponent(jCbxEditora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(94, 94, 94)
                .addComponent(jBtnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTxtTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtTituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTxtTituloActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // Adicionando conteúdo na JList de autores
        DefaultListModel listModelAutor = new DefaultListModel();
        List listAutor = new ArrayList();
        listAutor = controleAutor.carregarAutores();
        if (listAutor != null) {
            Iterator i = listAutor.iterator();
            while (i.hasNext()) {
                Autor deptList = (Autor) i.next();
                listModelAutor.addElement(deptList);
            }
            jListAutores.setModel(listModelAutor);
        }
        
        //Adicionando conteudo na JList de editoras
        DefaultComboBoxModel modelCombo = new DefaultComboBoxModel();
        List listEditora = controleEditora.carregarEditora();
        if (listEditora != null) {
            Iterator j = listEditora.iterator();
            while (j.hasNext()) {
                Editora deptList = (Editora) j.next();
                modelCombo.addElement(deptList);
            }
            jCbxEditora.setModel(modelCombo);
        }

    }//GEN-LAST:event_formWindowActivated

    private void jBtnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAdicionarActionPerformed
        float valor; // valor do livro
        // Pega todos os indexs selecionados
        autores = new HashSet<>();
        int[] indexSelecionados = jListAutores.getSelectedIndices();
        int index = jCbxEditora.getSelectedIndex();
        
        //Remove espaços desnecessarios do campos
        jTxtCodigo.setText(jTxtCodigo.getText().trim());
        jTxtTitulo.setText(jTxtTitulo.getText().trim());
        jTxtPreco.setText(jTxtPreco.getText().trim());
        
        //Tenta fazer o parse do valor no campo float
        try{
            valor = Float.parseFloat(jTxtPreco.getText());
        }catch (Exception e){
            valor = -1;
        }
        /**Validação dos campos**/
        if(jTxtTitulo.getText().isEmpty() || jTxtPreco.getText().isEmpty() || jTxtCodigo.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Voce deixou de preencher ou selecionar algum campo!");
        }else if(valor < 0){
            JOptionPane.showMessageDialog(null, "Verifique o valor do livro. \n Certifique que seja um valor positivo e esteja no formato adequado\n Exemplo: 25.00");
        }else if(jTxtCodigo.getText().length() != 13){
            JOptionPane.showMessageDialog(null, "O código de barras deve conter exatamente 13 caracteres.");
        }else if(jTxtTitulo.getText().length() > 25 || jTxtTitulo.getText().length() <= 0){
            JOptionPane.showMessageDialog(null, "O titulo deve conter 1 até 25 caracteres.");
        }else if(valor > 9999999999l){
            JOptionPane.showMessageDialog(null, "O valor execedeu o valor maximo: RS$ 9.999.999.999,99");
        }else if(indexSelecionados.length == 0 || index == -1){
            JOptionPane.showMessageDialog(null, "Voce não selecionou um autor e/ou uma editora!");
        }else{ //Começa o processamento
            // adiciona os Autores no HashSet
            for (int i = 0; i < indexSelecionados.length; i++) {
                Object sel = jListAutores.getModel().getElementAt(indexSelecionados[i]) ;
                Autor autor = (Autor) sel;
                autores.add(autor);
            }
            
            // adiciona o objeto Editora na variavel editora
            editora = (Editora) jCbxEditora.getSelectedItem();
            
            //Instancia o livro e adiciona no banco
            Livro livro = new Livro();
            livro.setIsbn(jTxtCodigo.getText());
            livro.setTitulo(jTxtTitulo.getText());
            livro.setPreco(Float.parseFloat(jTxtPreco.getText()));
            livro.setAutores(autores);
            livro.setEditora(editora);
                
            if(controleLivro.gravarLivro(livro) == 1){
                JOptionPane.showMessageDialog(null, "Livro adicionado com sucesso!");
            }else{
                JOptionPane.showMessageDialog(null, "Não foi possivel adicionar o livro!");
            };
            
        }
//        
//        
//        // Verifica se a lista de index e o index da editora estao vazios 
//        if(indexSelecionados.length != 0 && index != -1){
//            // adiciona os Autores no HashSet
//            for (int i = 0; i < indexSelecionados.length; i++) {
//                Object sel = jListAutores.getModel().getElementAt(indexSelecionados[i]) ;
//                Autor autor = (Autor) sel;
//                autores.add(autor);
//            }
//            // adiciona o objeto Editora na variavel editora
//            editora = (Editora) jCbxEditora.getSelectedItem();
//            
////            //Remove espaços desnecessarios do campos
////            jTxtTitulo.setText(jTxtTitulo.getText().trim());
////            jTxtPreco.setText(jTxtPreco.getText().trim());
////            jTxtCodigo.setText(jTxtCodigo.getText().trim());
////            
//            // Valida se o codigo de barras tem 13 carecteres
//            if(jTxtCodigo.getText().length() == 13){
//                // Faz uma ultima validaçao nos campos necessarios para adição
//                if(!jTxtTitulo.getText().isEmpty() && !jTxtPreco.getText().isEmpty()){
//                    //Instancia o livro e adiciona no banco
//                    Livro livro = new Livro();
//                    livro.setIsbn(jTxtCodigo.getText());
//                    livro.setTitulo(jTxtTitulo.getText());
//                    livro.setPreco(Float.parseFloat(jTxtPreco.getText()));
//                    livro.setAutores(autores);
//                    livro.setEditora(editora);
//                
//                    if(controleLivro.gravarLivro(livro) == 1){
//                        JOptionPane.showMessageDialog(null, "Livro adicionado com sucesso!");
//                    }else{
//                        JOptionPane.showMessageDialog(null, "Não foi possivel adicionar o livro!");
//                    };
//                }else{
//                    JOptionPane.showMessageDialog(null, "Voce deixou de preencher ou selecionar algum campo!");
//                }   
//            }else{
//                JOptionPane.showMessageDialog(null, "O Código de Barras não possui 13 caracteres!");
//            }  
//        }else{
//            JOptionPane.showMessageDialog(null, "Voce NÃO selecionou um autor e/ou uma editora!");
//        }   
    }//GEN-LAST:event_jBtnAdicionarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdicionarLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdicionarLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdicionarLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdicionarLivro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdicionarLivro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAdicionar;
    private javax.swing.JComboBox<String> jCbxEditora;
    private javax.swing.JLabel jLblAutorID;
    private javax.swing.JLabel jLblCodigo;
    private javax.swing.JLabel jLblEditora;
    private javax.swing.JLabel jLblPreco;
    private javax.swing.JLabel jLblTitulo;
    private javax.swing.JLabel jLblTituloPagina;
    private javax.swing.JList<String> jListAutores;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTxtCodigo;
    private javax.swing.JTextField jTxtPreco;
    private javax.swing.JTextField jTxtTitulo;
    // End of variables declaration//GEN-END:variables
}
